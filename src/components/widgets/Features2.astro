---
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import ItemGrid2 from '~/components/ui/ItemGrid2.astro';
import type { Features as Props } from '~/types';

const {
	title = await Astro.slots.render('title'),
	subtitle = await Astro.slots.render('subtitle'),
	tagline = await Astro.slots.render('tagline'),
	text = await Astro.slots.render('text'),
	items = [],
	columns = 3,
	defaultIcon,

	id,
	isDark = false,
	classes = {},
	bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-5xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
	<Headline title={title} subtitle={subtitle} tagline={tagline} classes={classes?.headline as Record<string, string>} />
	
	<ItemGrid2
		items={items}
		columns={columns}
		defaultIcon={defaultIcon}
		classes={{
		container: 'gap-6 md:gap-18',
		panel: 'p-0 items-center text-center',
		// panel:
		//   "text-center bg-page items-center md:text-left rtl:md:text-right md:items-start p-6 p-6 rounded-md shadow-xl dark:shadow-none dark:border dark:border-slate-800",
		icon: 'w-12 h-12 mb-6 text-primary',
		...((classes?.items as Record<string, never>) ?? {}),
		}}
	/>
	<div class="text-center mt-24">
		{ text && <div class="max-w-3xl text-sm mx-auto italic text-muted dark:text-slate-400" set:html={text} /> }
	</div>
</WidgetWrapper>
