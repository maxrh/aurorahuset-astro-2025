---
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Timeline from '~/components/ui/Timeline.astro';
import Headline from '~/components/ui/Headline.astro';
import Button from '~/components/ui/Button.astro';
import Image from '~/components/common/Image.astro';
import type { Steps as Props } from '~/types';

const {
	title = await Astro.slots.render('title'),
	subtitle = await Astro.slots.render('subtitle'),
	tagline = await Astro.slots.render('tagline'),
	actions = await Astro.slots.render('actions'),
	items = [],
	image = await Astro.slots.render('image'),
	isReversed = false,

	id,
	isDark = false,
	classes = {},
	bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl ${classes?.container ?? ''}`} bg={bg}>
		<Headline title={title} subtitle={subtitle} tagline={tagline} classes={classes?.headline as Record<string, string>} 
	/>
	<div class:list={['flex flex-col gap-8 md:gap-16', { 'md:flex-row-reverse': isReversed }, { 'md:flex-row': image }]}>
		<div class:list={['md:py-4 md:self-center', { 'md:basis-1/2': image }, { 'w-full': !image }]}>
			
			<Timeline items={items} classes={classes?.items as Record<string, never>} />
		</div>
		{
			image && (
				<div class="relative md:basis-1/2">
					{typeof image === 'string' ? (
						<Fragment set:html={image} />
					) : (
						<Image
							class="inset-0 object-cover object-top w-full rounded-xl md:absolute md:h-full intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade"
							widths={[400, 768]}
							sizes="(max-width: 768px) 100vw, 432px"
							width={432}
							height={768}
							layout="cover"
							src={image?.src}
							alt={image?.alt || ''}
						/>
					)}
				</div>
			)
		}
	</div>
	{
		actions && (
			<div class="mt-24 flex flex-nowrap flex-col sm:flex-row gap-4 justify-center">
				{Array.isArray(actions) ? (
					actions.map((action) => (
						<div class="flex w-full sm:w-auto">
							<Button {...(action || {})} class="w-full sm:mb-0" />
						</div>
					))
				) : (
					<Fragment set:html={actions} />
				)}
			</div>
		)
	}
</WidgetWrapper>
