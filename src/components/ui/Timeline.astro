---
import { Icon } from 'astro-icon/components';
import { twMerge } from 'tailwind-merge';
import type { Item } from '~/types';

export interface Props {
  items?: Array<Item>;
  defaultIcon?: string;
  classes?: Record<string, string>;
}

const { items = [], classes = {}, defaultIcon } = Astro.props as Props;

const {
	container: containerClass = 'max-w-lg mx-auto',
	panel: panelClass = '',
	title: titleClass = '',
	description: descriptionClass = '',
	icon: defaultIconClass = 'text-stone-50 bg-primary dark:text-contrast ',
} = classes;
---

{
	items && items.length > 0 && (
		<div class={containerClass}>
			{items.map(({ title, description, icon, classes: itemClasses = {}, listItems }, index = 0) => (
				<div
					class={twMerge(
						'flex intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade',
						panelClass,
						itemClasses?.panel
					)}
				>
					<div class="flex flex-col items-center mr-6 rtl:mr-0 rtl:ml-4">
						<div>
							<div class="flex items-center justify-center">
								{(icon || defaultIcon) && (
								<Icon
									name={icon || defaultIcon}
									class={twMerge('w-12 h-12 p-3 rounded-full', defaultIconClass, itemClasses?.icon)}
								/>
								)}
							</div>
						</div>
						{index !== items.length - 1 && <div class="w-px h-full bg-stone-200/90 dark:bg-stone-200/10" />}
					</div>
					<div class={`pt-1 ${index !== items.length - 1 ? 'pb-8' : ''}`}>
						{title && <p class={twMerge('text-xl font-bold', titleClass, itemClasses?.title)} set:html={title} />}
						{description && (
							<p
								class={twMerge('text-muted mt-2', descriptionClass, itemClasses?.description)}
								set:html={description}
							/>
						)}
						{listItems && listItems.length > 0 && (
							<ul class="mt-2 space-y-0">
								{listItems.map((item) => (
									<li class="flex items-start">
										<span class="text-primary mr-2 rtl:mr-0 rtl:ml-2">â€¢</span>
										<span class="text-muted" set:html={item} />
									</li>
								))}
							</ul>
						)}
					</div>
				</div>
			))}
		</div>
	)
}
